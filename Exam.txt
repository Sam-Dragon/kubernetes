# Ckad exam related

## Configmap
kubectl create cm literal-config --from-literal="DB_HOST=host.com" --from-literal="DB_PORT=8080"
kubectl create cm file-config --from-file=/configmap.yaml
kubectl create cm env-config --from-env-file=/configmap.env

## Secret
kubectl create secret generic literal-secret --from-literal="DB_NAME=admin" --from-literal="DB_PASS=admin123"
kubectl create secret generic file-secret --from-file=/secret.yaml
kubectl create secret generic env-secret --from-env-file=/secret.env

> Create Secret for Docker
kubectl create secret docker-registry regcred --docker-server=<DOCKER_URL> --docker-username=<DOCKER_USERNAME> --docker-password=<DOCKER_PASSWORD> --docker-email=<DOCKER_EMAIL>
kubectl create secret docker-registry my-secret --from-file=.dockerconfigjson=path/to/.docker/config.json

> Create Secret for TLS
kubectl create secret tls my-tls-secret --cert=path/to/cert/file --key=path/to/key/file

## Deployments
> create deployment with replicas & port in namespace = ckad & command date
kubectl create deploy nginx --image=nginx --replicas=3 --port=5678 -n ckad -- date

> Scaling the deployment
kubectl scale deploy nginx --replicas=2

> To set & remove resources 
kubectl set resources deploy nginx --requests="cpu=1,memory=100Mi" --limits="cpu=2,memory=1G" 
kubectl set resources  deploy nginx --requests="cpu=0,memory=0" --limits="cpu=0,memory=0"

> To set & remove service account
kubectl set sa deploy nginx service-account-1

## Labels
> create pods with labels
kubectl run nginx --image=nginx --labels="app=run"

> Set label to existing pod
kubectl label po nginx app=run

> Update the label
kubectl label pod -n ckad nginx-label app=ckad-update --overwrite

> Get labels
kubectl get po nginx --show-labels
kubectl get labels nginx --list


## Environment
> To set & Remove env variable for existing pods/deploy
kubectl set env deploy nginx app=nginx
kubectl set env deploy nginx app-

> Import Env from configmap / secret [this will be read as individual keys in deploy/pod]
kubectl set env --from=configmap/myconfigmap deployment/myapp
kubectl set env --from=secret/mysecret deployment/myapp


## Debug
> To find out the names of container in multi container pod
kubectl logs <POD NAME>
- warning message will display the names

# Resource Quota
> resource quota with all parametes & scopes 
kubectl create quota my-quota --hard=cpu=1,memory=1G,pods=2,services=3,replicationcontrollers=2,resourcequotas=1,secrets=5,persistentvolumeclaims=10 --scopes=BestEffort

# Ingress
kubectl create ingress ingress_test --rule="host.com/context=service:8080,tls=my-cert" --rule="host.com/context=service:8080,tls=secret" --annotation nginx.ingress.kubernetes.io/rewrite-target=/  --default-backend=defaultsvc:http
