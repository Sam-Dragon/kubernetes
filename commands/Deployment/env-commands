# Env updates in Deployment
- Ideally, it load by key. 
---
valueFrom:
  configMapKeyRef:
    - name: configMap-Name
      key: XYZ_KEY
---

# DisAdvantage
- We cannot use it if we want to load complete configmap at one shot 
- We cannot use it for volumes as well

# List all env from pods/deployments/rc
kubectl set env deploy --all --list
kubectl set env po --all --list

# List all env from pods/deployments/rc specific
kubectl set env deploy nginx --list

# Update Env in Deployment
- if key is present it updates else it creates
kubectl set env deploy nginx APP=COLOUR

# Remove the env from deployment
kubectl set env deploy nginx APP-

# Import Env from configmap
# All
kubectl set env --from=configmap/myconfigmap deployment/myapp

# Specific with Tag
kubectl set env --from=configmap/myconfigmap --prefix=MYSQL_ deployment/myapp

# Import environment from a secret
kubectl set env --from=secret/mysecret deployment/myapp

# Remove the environment variable ENV from container 'c1' in all deployment configs
kubectl set env deployments --all --containers="c1" ENV-

