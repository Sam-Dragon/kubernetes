echo -e "Password@123" | base64
echo -e "UGFzc3dvcmRAMTIz" | base64 -d

# Create
kubectl create secret generic delete-secret -n ckad

> Create with Env variables
kubectl create secret generic env-secret --from-literal=DB_PASS=Password@123 -n ckad

> Create with file
echo -e "DB_PASS=Password@123\nDB_URL=localhost:9090" > secret.properties
kubectl create secret generic file-secret --from-file=secret.properties -n ckad

> Create with file with comments
echo -e "DB_PASS=Password@123\n#This is comment\nDB_URL=localhost:9090" > secret.env
kubectl create secret generic env-file-secret --from-env-file=secret.env -n ckad

> Create with file with key
echo -e "DB_PASS=Password@123\nDB_URL=localhost:9090" > secret.txt
kubectl create secret generic file-as-key-secret --from-file=special=secret.txt -n ckad

# Edit [Provide Encoded Password only]
kubectl edit secret env-secret -n ckad

# Get
kubectl get secret -n ckad

> Get specific secrets
> Yaml
kubectl get secret env-secret -n ckad -o yaml
> Json 
kubectl get secret env-secret -n ckad -o json

> Get all secrets
kubectl get secret -n ckad -o yaml

# Delete
kubectl delete secret delete-secret -n ckad

# Describe
kubectl describe secret env-secret -n ckad

# Export 
> YAML
kubectl create secret generic create-secret -n ckad --dry-run=client -o yaml > secret.yaml
kubectl create -f secret.yaml (OR) kubectl apply -f secret.yaml

> JSON
kubectl create secret generic create-json-secret -n ckad --dry-run=client -o json > secret-json.yaml
kubectl create -f secret-json.yaml (OR) kubectl apply -f secret-json.yaml

# Create Secret for Docker
kubectl create secret docker-registry regcred --docker-server=<DOCKER_URL> --docker-username=<DOCKER_USERNAME> --docker-password=<DOCKER_PASSWORD> --docker-email=<DOCKER_EMAIL>
kubectl create secret docker-registry my-secret --from-file=.dockerconfigjson=path/to/.docker/config.json

# Create Secret for TLS
kubectl create secret tls my-tls-secret --cert=path/to/cert/file --key=path/to/key/file
